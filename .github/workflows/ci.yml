name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

env:
  NODE_ENV: development

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    needs: []
    outputs:
      node-modules-cache-key: ${{ steps.node-modules-cache-key.outputs.key }}
      node-modules-cache-path: ${{ steps.node-modules-cache-key.outputs.path }}
    steps:
      - uses: actions/checkout@v3

      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions

      - id: node-modules-cache-key
        uses: ./.github/workflows/composite/node-modules-cache-key
        with:
          node-env: ${{ env.NODE_ENV }}
          node-version: ${{ steps.setup-node.outputs.node-version }}

      - uses: actions/cache@v3
        with:
          key: ${{ steps.node-modules-cache-key.outputs.key }}
          path: ${{ steps.node-modules-cache-key.outputs.path }}
          restore-keys: ${{ steps.node-modules-cache-key.outputs.restore-keys }}

      - run: yarn install --frozen-lockfile
        shell: bash

  eslint:
    runs-on: ubuntu-latest
    needs: [install-dependencies]
    steps:
      - uses: actions/checkout@v3

      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions

      - uses: actions/cache@v3
        with:
          key: ${{ needs.install-dependencies.outputs.node-modules-cache-key }}
          path: ${{ needs.install-dependencies.outputs.node-modules-cache-path }}

      - run: yarn run nuxt prepare
        shell: bash

      - run: yarn run lint
        shell: bash

  coverage:
    runs-on: ubuntu-latest
    needs: [install-dependencies]
    steps:
      - uses: actions/checkout@v3

      - id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions

      - uses: actions/cache@v3
        with:
          key: ${{ needs.install-dependencies.outputs.node-modules-cache-key }}
          path: ${{ needs.install-dependencies.outputs.node-modules-cache-path }}

      - run: yarn run nuxt prepare
        shell: bash

      - run: yarn run coverage
        shell: bash

  build:
    needs: []
    uses: ./.github/workflows/_build.yml
    with:
      use-artifact: true

  check-built-artifact:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact-name }}
          path: ${{ needs.build.outputs.artifact-path }}

      - run: ls -a
        shell: bash
        working-directory: ${{ needs.build.outputs.artifact-path }}
